{"ast":null,"code":"import React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport StackNavigator from \"./StackNavigator\";\nimport Categorias from \"../src/Screens/Categorias\";\nimport Pagamentos from \"../src/Screens/Pagamentos\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport Sobre from \"../src/Screens/Sobre\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tabs = createBottomTabNavigator();\n\nvar TabsNavigator = function TabsNavigator() {\n  return _jsxs(Tabs.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === 'Home') {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (route.name === 'Categorias') {\n            iconName = focused ? 'list' : 'list-outline';\n          } else if (route.name === 'Pagamentos') {\n            iconName = focused ? 'card' : 'card-outline';\n          } else if (route.name === 'Sobre') {\n            iconName = focused ? 'people' : 'people-outline';\n          }\n\n          return _jsx(Icon, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: '#0d6efd',\n        tabBarInactiveTintColor: 'gray'\n      };\n    },\n    children: [_jsx(Tabs.Screen, {\n      name: \"Home\",\n      component: StackNavigator,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Tabs.Screen, {\n      name: \"Categorias\",\n      component: Categorias\n    }), _jsx(Tabs.Screen, {\n      name: \"Pagamentos\",\n      component: Pagamentos\n    }), _jsx(Tabs.Screen, {\n      name: \"Sobre\",\n      component: Sobre\n    })]\n  });\n};\n\nexport default TabsNavigator;","map":{"version":3,"names":["React","createBottomTabNavigator","StackNavigator","Categorias","Pagamentos","Icon","Sobre","Tabs","TabsNavigator","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown"],"sources":["C:/Users/pedro/Baazzar-Tabs/Navigation/TabsNavigator.js"],"sourcesContent":["import React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport StackNavigator from './StackNavigator'\nimport Categorias from '../src/Screens/Categorias';\nimport Pagamentos from '../src/Screens/Pagamentos';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport Sobre from '../src/Screens/Sobre';\n\nconst Tabs = createBottomTabNavigator();\nconst TabsNavigator = () => {\n  return (\n    <Tabs.Navigator\n\n    screenOptions={({ route }) => ({\n      tabBarIcon: ({ focused, color, size }) => {\n        let iconName;\n\n        // Configuramos os icones que irão aparecer caso a tela esteja selecionada ou não\n        if (route.name === 'Home') {\n          iconName = focused\n            ? 'home'\n            : 'home-outline';\n        } else if (route.name === 'Categorias') {\n          iconName = focused\n          ? 'list'\n          : 'list-outline';\n        } else if (route.name === 'Pagamentos') {\n          iconName = focused\n          ? 'card'\n          : 'card-outline';\n        } else if (route.name === 'Sobre') {\n          iconName = focused\n          ? 'people'\n          : 'people-outline';\n        }\n        \n\n        // Retornamos o ícone\n        return <Icon name={iconName} size={size} color={color} />;\n      },\n      // Definimos as cores dos ícones\n      tabBarActiveTintColor: '#0d6efd',\n      tabBarInactiveTintColor: 'gray',\n    })}    \n\n    >\n      <Tabs.Screen \n        name=\"Home\" \n        component={StackNavigator} \n        options={{headerShown: false}} \n      />\n      <Tabs.Screen \n        name=\"Categorias\" \n        component={Categorias}  \n      />\n      <Tabs.Screen \n        name=\"Pagamentos\" \n        component={Pagamentos}      \n      />\n      <Tabs.Screen \n        name=\"Sobre\" \n        component={Sobre}      \n      />\n    </Tabs.Navigator>\n  );\n};\nexport default TabsNavigator;"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP;AACA,OAAOC,KAAP;;;AAEA,IAAMC,IAAI,GAAGN,wBAAwB,EAArC;;AACA,IAAMO,aAAa,GAAG,SAAhBA,aAAgB,GAAM;EAC1B,OACE,MAAC,IAAD,CAAM,SAAN;IAEA,aAAa,EAAE;MAAA,IAAGC,KAAH,QAAGA,KAAH;MAAA,OAAgB;QAC7BC,UAAU,EAAE,2BAA8B;UAAA,IAA3BC,OAA2B,SAA3BA,OAA2B;UAAA,IAAlBC,KAAkB,SAAlBA,KAAkB;UAAA,IAAXC,IAAW,SAAXA,IAAW;UACxC,IAAIC,QAAJ;;UAGA,IAAIL,KAAK,CAACM,IAAN,KAAe,MAAnB,EAA2B;YACzBD,QAAQ,GAAGH,OAAO,GACd,MADc,GAEd,cAFJ;UAGD,CAJD,MAIO,IAAIF,KAAK,CAACM,IAAN,KAAe,YAAnB,EAAiC;YACtCD,QAAQ,GAAGH,OAAO,GAChB,MADgB,GAEhB,cAFF;UAGD,CAJM,MAIA,IAAIF,KAAK,CAACM,IAAN,KAAe,YAAnB,EAAiC;YACtCD,QAAQ,GAAGH,OAAO,GAChB,MADgB,GAEhB,cAFF;UAGD,CAJM,MAIA,IAAIF,KAAK,CAACM,IAAN,KAAe,OAAnB,EAA4B;YACjCD,QAAQ,GAAGH,OAAO,GAChB,QADgB,GAEhB,gBAFF;UAGD;;UAID,OAAO,KAAC,IAAD;YAAM,IAAI,EAAEG,QAAZ;YAAsB,IAAI,EAAED,IAA5B;YAAkC,KAAK,EAAED;UAAzC,EAAP;QACD,CA1B4B;QA4B7BI,qBAAqB,EAAE,SA5BM;QA6B7BC,uBAAuB,EAAE;MA7BI,CAAhB;IAAA,CAFf;IAAA,WAmCE,KAAC,IAAD,CAAM,MAAN;MACE,IAAI,EAAC,MADP;MAEE,SAAS,EAAEf,cAFb;MAGE,OAAO,EAAE;QAACgB,WAAW,EAAE;MAAd;IAHX,EAnCF,EAwCE,KAAC,IAAD,CAAM,MAAN;MACE,IAAI,EAAC,YADP;MAEE,SAAS,EAAEf;IAFb,EAxCF,EA4CE,KAAC,IAAD,CAAM,MAAN;MACE,IAAI,EAAC,YADP;MAEE,SAAS,EAAEC;IAFb,EA5CF,EAgDE,KAAC,IAAD,CAAM,MAAN;MACE,IAAI,EAAC,OADP;MAEE,SAAS,EAAEE;IAFb,EAhDF;EAAA,EADF;AAuDD,CAxDD;;AAyDA,eAAeE,aAAf"},"metadata":{},"sourceType":"module"}